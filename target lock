local NotifyLibrary = loadstring(game:HttpGet("https://pastebin.com/raw/zg2UfGDN"))()
local Notify = NotifyLibrary.Notify

getgenv().Target = false
    -- Configuration
    getgenv().Key = Enum.KeyCode.V
    getgenv().Prediction = 0.1413
    getgenv().ChatMode = false
    getgenv().NotifMode = true
        getgenv().PartMode = true
        getgenv().AirshotFunccc = true
        getgenv().Partz = "HumanoidRootPart"
    getgenv().AutoPrediction = false
    getgenv().Fov = math.huge
    getgenv().Circle = false
    --
        _G.Types = {
            Ball = Enum.PartType.Ball,
            Block = Enum.PartType.Block, 
            Cylinder = Enum.PartType.Cylinder
        }
 
        --variables                 
            local Tracer = Instance.new("Part", game.Workspace)
        Tracer.Name = "gay"	
        Tracer.Anchored = true		
        Tracer.CanCollide = false
        Tracer.Parent = game.Workspace	
        Tracer.Shape = _G.Types.Block
        Tracer.Material = Enum.Material.Neon 
        game:GetService"RunService".Stepped:connect(function()
    
        Tracer.Transparency = _G.targetaimtransparency -- (0.8)
        Tracer.Size = _G.targetaimsize --Vector3.new(14,14,14)
        Tracer.Color = _G.targetaimcolor --Color3.fromRGB(128,128,128)
        end)
 
 
        --
        local plr = game.Players.LocalPlayer
    local mouse = plr:GetMouse()
    local Runserv = game:GetService("RunService")
 
    circle = Drawing.new("Circle")
    circle.Color = Color3.fromRGB(25,25,25)
    circle.Thickness = 0
    circle.NumSides = 732
    circle.Radius = getgenv().Fov
    circle.Thickness = 0
    circle.Transparency = 0
    circle.Visible = getgenv().Circle
    circle.Filled = false
 
    Runserv.RenderStepped:Connect(function()
        circle.Position = Vector2.new(mouse.X,mouse.Y+35)
        if getgenv().AirshotFunccc == true then
                if Plr ~= nil then else return; end
                if Plr.Character.Humanoid.Jump == true and Plr.Character.Humanoid.FloorMaterial == Enum.Material.Air then
                    getgenv().Partz = "RightFoot"
                else
                    Plr.Character:WaitForChild("Humanoid").StateChanged:Connect(function(old,new)
                        if new == Enum.HumanoidStateType.Freefall then
                        getgenv().Partz = "RightFoot"
                        else
                            getgenv().Partz = "HumanoidRootPart"
                        end
                    end)
                end
    end
    end)
 
            local guimain = Instance.new("Folder", game.CoreGui)
            local CC = game:GetService"Workspace".CurrentCamera
        local LocalMouse = game.Players.LocalPlayer:GetMouse()
            local Locking = false
 
 
        --
 
 
        getgenv().valiansh = true
 
            local UserInputService = game:GetService("UserInputService")
 
        UserInputService.InputBegan:Connect(function(keygo,ok)
 
 
               if (not ok) then
               if (keygo.KeyCode == getgenv().Key) then
                   if getgenv().Target == true then
                    Plr =  getClosestPlayerToCursor()
                    if Plr.Information.KO.Value == false then 
                   Locking = not Locking
 
                   if Locking then
 
 
                    if getgenv().ChatMode then
            local A_1 = "Youre about to get clapped "..tostring(Plr.Character.Humanoid.DisplayName) local A_2 = "All" local Event = game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest Event:FireServer(A_1, A_2) 
                end	
                   if getgenv().NotifMode then
 
             Notify({
                Title = "Crimskid",
                Description = "Targeted:" .. Plr.Character.Humanoid.DisplayName .. "",
                Duration = 3
            })
        end
        elseif not Locking then
             if getgenv().ChatMode then
            local A_1 = "Unlocked!" local A_2 = "All" local Event = game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest Event:FireServer(A_1, A_2) 
                end	
            if getgenv().NotifMode then
                Notify({
                Title = "Crimskid",
                Description = "Unlocked!",
                Duration = 3
            })
               elseif getgenv().Target == false then
                Notify({
                Title = "Crimskid",
                Description = "Unlocked!",
                Duration = 3
            })
 
                   end
 
 
     end     end   
    end
    end
end 
    end)
 
 
        function getClosestPlayerToCursor()
            local closestPlayer
            local shortestDistance = circle.Radius
 
            for i, v in pairs(game.Players:GetPlayers()) do
                if v ~= game.Players.LocalPlayer and v.Character and v.Character:FindFirstChild("Humanoid") and v.Character.Humanoid.Health ~= 0 and v.Character:FindFirstChild("LowerTorso") then
                    local pos = CC:WorldToViewportPoint(v.Character.PrimaryPart.Position)
                    local magnitude = (Vector2.new(pos.X, pos.Y) - Vector2.new(LocalMouse.X, LocalMouse.Y)).magnitude
                    if magnitude < shortestDistance then
                        closestPlayer = v
                        shortestDistance = magnitude
                    end
                end
            end
            return closestPlayer
        end
    --
    if getgenv().PartMode then
        game:GetService"RunService".Stepped:connect(function()
            if Locking and Plr.Character and Plr.Character:FindFirstChild("LowerTorso") then
                Tracer.CFrame = CFrame.new(Plr.Character.LowerTorso.Position+(Plr.Character.LowerTorso.Velocity*Prediction))
            else
                Tracer.CFrame = CFrame.new(0, 9999, 0)
            end
        end)
    end
 
    if getgenv().tracermode then
        game:GetService"RunService".Stepped:connect(function()
            if Locking and Plr.Character and Plr.Character:FindFirstChild("LowerTorso") then
                Tracer.CFrame = CFrame.new(Plr.Character.LowerTorso.Position+(Plr.Character.LowerTorso.Velocity*Prediction))
            else
                Tracer.CFrame = CFrame.new(0, 9999, 0)
            end
        end)
    end
 
 
 
        --
        local rawmetatable = getrawmetatable(game)
        local old = rawmetatable.__namecall
        setreadonly(rawmetatable, false)
        rawmetatable.__namecall = newcclosure(function(...)
            local args = {...}
            if Locking and getnamecallmethod() == "FireServer" and args[2] == "UpdateMousePos" then
                args[3] = Plr.Character[getgenv().Partz].Position*Prediction)
                return old(unpack(args))
            end
            return old(...)
        end)
    ---
        while wait() do
        if getgenv().AutoPrediction == true then
            local pingvalue = game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValueString()
            local split = string.split(pingvalue,'(')
            local ping = tonumber(split[1])
            if ping < 130 then
                getgenv().Prediction = 0.151
            elseif ping < 125 then
                getgenv().Prediction = 0.149
            elseif ping < 110 then
                getgenv().Prediction = 0.140
            elseif ping < 105 then
                getgenv().Prediction = 0.133
            elseif ping < 90 then
                getgenv().Prediction = 0.130
            elseif ping < 80 then
                getgenv().Prediction = 0.128
            elseif ping < 70 then
                getgenv().Prediction = 0.1230
            elseif ping < 60 then
                getgenv().Prediction = 0.1229
            elseif ping < 50 then
                getgenv().Prediction = 0.1225
            elseif ping < 40 then
                getgenv().Prediction = 0.1256
            end
        end
        end
